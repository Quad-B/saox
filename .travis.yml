sudo: required
dist: xenial
language: node_js
node_js: '10'
before_install:
  - sudo apt update
  - sudo apt install build-essential
  - sudo apt install snapd
  - sudo snap install --classic snapcraft
  - sudo snap refresh
  - sudo apt-get install --no-install-recommends -y libopenjp2-tools
  - sudo apt-get install --no-install-recommends -y snapcraft
  - sudo apt-get install build-essential clang libdbus-1-dev libgtk-3-dev libnotify-dev libgnome-keyring-dev libgconf2-dev libasound2-dev libcap-dev libcups2-dev libxtst-dev libxss1 libnss3-dev gcc-multilib g++-multilib curl gperf bison python-dbusmock openjdk-8-jre
  - sudo dpkg --add-architecture i386
  - wget -nc https://dl.winehq.org/wine-builds/winehq.key
  - sudo apt-key add winehq.key
  - sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main'
  - sudo apt-get update
  - sudo apt-get install -y aptitude
  - sudo aptitude install -y winehq-stable
  - sudo apt install build-essential checkinstall zlib1g-dev -y
  - cd /usr/local/src/
  - sudo wget https://www.openssl.org/source/openssl-1.1.1c.tar.gz
  - sudo tar -xf openssl-1.1.1c.tar.gz
  - cd openssl-1.1.1c
  - sudo ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib
  - sudo make
  - sudo make test
  - sudo make install
  - sudo chmod -R 777 /etc/ld.so.conf.d/
  - cd /etc/ld.so.conf.d/
  - sudo touch openssl-1.1.1c.conf
  - echo "/usr/local/ssl/lib" >> openssl-1.1.1c.conf
  - sudo ldconfig -v
  - sudo mv /usr/bin/c_rehash /usr/bin/c_rehash.backup
  - sudo mv /usr/bin/openssl /usr/bin/openssl.backup
  - sudo echo "PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/ssl/bin\"" >> /etc/environment
  - source /etc/environment
  - echo $PATH
  - which openssl
  - openssl version -a
install:
  # - npm install --global release-it
  - npm install --global yarn
  # - npm uninstall electron-builder --save-dev
  - npm update
  - yarn global add electron-builder
script:
  # - npm uninstall async --save
  # - npm uninstall run-async --save
  # - cat package.json
  # - rm -rf docs
  # - cd img
  # - rm -f saoxnew.psd
  # - rm -f footer_bg.png
  # - rm -f footer.png
  # - dir
  # - cd -
  - electron-builder -wl --publish "always" -c.snap.publish=github
  # - electron-builder -w --publish "never"
  # - npm uninstall electron --save-dev
  # - npm install electron@2.0.18 --save-dev
  # -  rm -f index.js
  # - mv index_2.js index.js
  # - electron-builder -l --publish "never"
  # - dir
  # - node deletepackage.js
  # - dir
  # - npm uninstall --global yarn
  # - cd dist
  # - dir
  # - cd -
  # - release-it 1.5.5 --config .release-it.json --no-npm.publish --no-git
  - electron-builder install-app-deps
